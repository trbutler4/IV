/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Blog, BlogInterface } from "../Blog";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_cid",
        type: "string",
      },
    ],
    name: "createPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPostId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_postId",
        type: "uint256",
      },
    ],
    name: "getPost",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "cid",
            type: "string",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
        ],
        internalType: "struct Blog.Post",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "posts",
    outputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b50610b10806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630b1e7f831461005157806340731c241461008257806340b8c9cf146100b2578063c7303c61146100d0575b600080fd5b61006b6004803603810190610066919061040b565b6100ec565b604051610079929190610509565b60405180910390f35b61009c6004803603810190610097919061040b565b6101b8565b6040516100a991906105cf565b60405180910390f35b6100ba6102cc565b6040516100c79190610600565b60405180910390f35b6100ea60048036038101906100e59190610750565b6102d6565b005b600060205280600052604060002060009150905080600001805461010f906107c8565b80601f016020809104026020016040519081016040528092919081815260200182805461013b906107c8565b80156101885780601f1061015d57610100808354040283529160200191610188565b820191906000526020600020905b81548152906001019060200180831161016b57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6101c0610391565b6000808381526020019081526020016000206040518060400160405290816000820180546101ed906107c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610219906107c8565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6000600154905090565b60405180604001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff168152506000806001548152602001908152602001600020600082015181600001908161032a91906109a5565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060018060008282546103879190610aa6565b9250508190555050565b604051806040016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6103e8816103d5565b81146103f357600080fd5b50565b600081359050610405816103df565b92915050565b600060208284031215610421576104206103cb565b5b600061042f848285016103f6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610472578082015181840152602081019050610457565b60008484015250505050565b6000601f19601f8301169050919050565b600061049a82610438565b6104a48185610443565b93506104b4818560208601610454565b6104bd8161047e565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f3826104c8565b9050919050565b610503816104e8565b82525050565b60006040820190508181036000830152610523818561048f565b905061053260208301846104fa565b9392505050565b600082825260208201905092915050565b600061055582610438565b61055f8185610539565b935061056f818560208601610454565b6105788161047e565b840191505092915050565b61058c816104e8565b82525050565b600060408301600083015184820360008601526105af828261054a565b91505060208301516105c46020860182610583565b508091505092915050565b600060208201905081810360008301526105e98184610592565b905092915050565b6105fa816103d5565b82525050565b600060208201905061061560008301846105f1565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61065d8261047e565b810181811067ffffffffffffffff8211171561067c5761067b610625565b5b80604052505050565b600061068f6103c1565b905061069b8282610654565b919050565b600067ffffffffffffffff8211156106bb576106ba610625565b5b6106c48261047e565b9050602081019050919050565b82818337600083830152505050565b60006106f36106ee846106a0565b610685565b90508281526020810184848401111561070f5761070e610620565b5b61071a8482856106d1565b509392505050565b600082601f8301126107375761073661061b565b5b81356107478482602086016106e0565b91505092915050565b600060208284031215610766576107656103cb565b5b600082013567ffffffffffffffff811115610784576107836103d0565b5b61079084828501610722565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107e057607f821691505b6020821081036107f3576107f2610799565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261085b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261081e565b610865868361081e565b95508019841693508086168417925050509392505050565b6000819050919050565b60006108a261089d610898846103d5565b61087d565b6103d5565b9050919050565b6000819050919050565b6108bc83610887565b6108d06108c8826108a9565b84845461082b565b825550505050565b600090565b6108e56108d8565b6108f08184846108b3565b505050565b5b81811015610914576109096000826108dd565b6001810190506108f6565b5050565b601f8211156109595761092a816107f9565b6109338461080e565b81016020851015610942578190505b61095661094e8561080e565b8301826108f5565b50505b505050565b600082821c905092915050565b600061097c6000198460080261095e565b1980831691505092915050565b6000610995838361096b565b9150826002028217905092915050565b6109ae82610438565b67ffffffffffffffff8111156109c7576109c6610625565b5b6109d182546107c8565b6109dc828285610918565b600060209050601f831160018114610a0f57600084156109fd578287015190505b610a078582610989565b865550610a6f565b601f198416610a1d866107f9565b60005b82811015610a4557848901518255600182019150602085019450602081019050610a20565b86831015610a625784890151610a5e601f89168261096b565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ab1826103d5565b9150610abc836103d5565b9250828201905080821115610ad457610ad3610a77565b5b9291505056fea2646970667358221220a66c0a10d9c59c7c84cbe0b3c9fe4edbbd445d8a67c0a47fa11547841e67a8b064736f6c63430008120033";

type BlogConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlogConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Blog__factory extends ContractFactory {
  constructor(...args: BlogConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Blog> {
    return super.deploy(overrides || {}) as Promise<Blog>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Blog {
    return super.attach(address) as Blog;
  }
  override connect(signer: Signer): Blog__factory {
    return super.connect(signer) as Blog__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlogInterface {
    return new utils.Interface(_abi) as BlogInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Blog {
    return new Contract(address, _abi, signerOrProvider) as Blog;
  }
}
